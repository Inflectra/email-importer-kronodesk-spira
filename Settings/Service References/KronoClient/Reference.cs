//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inflectra.KronoDesk.Service.Email.Settings.KronoClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
    [System.SerializableAttribute()]
    public partial struct ServiceFaultMessage : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteProduct", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductToken {
            get {
                return this.ProductTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTokenField, value) != true)) {
                    this.ProductTokenField = value;
                    this.RaisePropertyChanged("ProductToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteUser", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LdapDnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RssTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LdapDn {
            get {
                return this.LdapDnField;
            }
            set {
                if ((object.ReferenceEquals(this.LdapDnField, value) != true)) {
                    this.LdapDnField = value;
                    this.RaisePropertyChanged("LdapDn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleInitial {
            get {
                return this.MiddleInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleInitialField, value) != true)) {
                    this.MiddleInitialField = value;
                    this.RaisePropertyChanged("MiddleInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RssToken {
            get {
                return this.RssTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.RssTokenField, value) != true)) {
                    this.RssTokenField = value;
                    this.RaisePropertyChanged("RssToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTicket", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTicket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccessedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AssigneeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssigneeUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConcurrencyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote> NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OpenerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenerUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> PriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ResolutionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccessedDate {
            get {
                return this.AccessedDateField;
            }
            set {
                if ((this.AccessedDateField.Equals(value) != true)) {
                    this.AccessedDateField = value;
                    this.RaisePropertyChanged("AccessedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssigneeId {
            get {
                return this.AssigneeIdField;
            }
            set {
                if ((this.AssigneeIdField.Equals(value) != true)) {
                    this.AssigneeIdField = value;
                    this.RaisePropertyChanged("AssigneeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssigneeUserName {
            get {
                return this.AssigneeUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneeUserNameField, value) != true)) {
                    this.AssigneeUserNameField = value;
                    this.RaisePropertyChanged("AssigneeUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConcurrencyDate {
            get {
                return this.ConcurrencyDateField;
            }
            set {
                if ((this.ConcurrencyDateField.Equals(value) != true)) {
                    this.ConcurrencyDateField = value;
                    this.RaisePropertyChanged("ConcurrencyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAttachments {
            get {
                return this.HasAttachmentsField;
            }
            set {
                if ((this.HasAttachmentsField.Equals(value) != true)) {
                    this.HasAttachmentsField = value;
                    this.RaisePropertyChanged("HasAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongDescription {
            get {
                return this.LongDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LongDescriptionField, value) != true)) {
                    this.LongDescriptionField = value;
                    this.RaisePropertyChanged("LongDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote> Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> OpenerId {
            get {
                return this.OpenerIdField;
            }
            set {
                if ((this.OpenerIdField.Equals(value) != true)) {
                    this.OpenerIdField = value;
                    this.RaisePropertyChanged("OpenerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenerUserName {
            get {
                return this.OpenerUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenerUserNameField, value) != true)) {
                    this.OpenerUserNameField = value;
                    this.RaisePropertyChanged("OpenerUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> PriorityId {
            get {
                return this.PriorityIdField;
            }
            set {
                if ((this.PriorityIdField.Equals(value) != true)) {
                    this.PriorityIdField = value;
                    this.RaisePropertyChanged("PriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriorityName {
            get {
                return this.PriorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityNameField, value) != true)) {
                    this.PriorityNameField = value;
                    this.RaisePropertyChanged("PriorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ResolutionId {
            get {
                return this.ResolutionIdField;
            }
            set {
                if ((this.ResolutionIdField.Equals(value) != true)) {
                    this.ResolutionIdField = value;
                    this.RaisePropertyChanged("ResolutionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionName {
            get {
                return this.ResolutionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNameField, value) != true)) {
                    this.ResolutionNameField = value;
                    this.RaisePropertyChanged("ResolutionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTicketNote", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTicketNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInternalOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ModifiedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NoteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TicketIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInternalOnly {
            get {
                return this.IsInternalOnlyField;
            }
            set {
                if ((this.IsInternalOnlyField.Equals(value) != true)) {
                    this.IsInternalOnlyField = value;
                    this.RaisePropertyChanged("IsInternalOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ModifiedById {
            get {
                return this.ModifiedByIdField;
            }
            set {
                if ((this.ModifiedByIdField.Equals(value) != true)) {
                    this.ModifiedByIdField = value;
                    this.RaisePropertyChanged("ModifiedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NoteId {
            get {
                return this.NoteIdField;
            }
            set {
                if ((this.NoteIdField.Equals(value) != true)) {
                    this.NoteIdField = value;
                    this.RaisePropertyChanged("NoteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteSitemapEntry", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteSitemapEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDynamicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDynamic {
            get {
                return this.IsDynamicField;
            }
            set {
                if ((this.IsDynamicField.Equals(value) != true)) {
                    this.IsDynamicField = value;
                    this.RaisePropertyChanged("IsDynamic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteDocument", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ArtifactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArtifactTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameOrUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ArtifactId {
            get {
                return this.ArtifactIdField;
            }
            set {
                if ((this.ArtifactIdField.Equals(value) != true)) {
                    this.ArtifactIdField = value;
                    this.RaisePropertyChanged("ArtifactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArtifactTypeId {
            get {
                return this.ArtifactTypeIdField;
            }
            set {
                if ((this.ArtifactTypeIdField.Equals(value) != true)) {
                    this.ArtifactTypeIdField = value;
                    this.RaisePropertyChanged("ArtifactTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AttachmentId {
            get {
                return this.AttachmentIdField;
            }
            set {
                if ((this.AttachmentIdField.Equals(value) != true)) {
                    this.AttachmentIdField = value;
                    this.RaisePropertyChanged("AttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentTypeId {
            get {
                return this.AttachmentTypeIdField;
            }
            set {
                if ((this.AttachmentTypeIdField.Equals(value) != true)) {
                    this.AttachmentTypeIdField = value;
                    this.RaisePropertyChanged("AttachmentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentURL {
            get {
                return this.DocumentURLField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentURLField, value) != true)) {
                    this.DocumentURLField = value;
                    this.RaisePropertyChanged("DocumentURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilenameOrUrl {
            get {
                return this.FilenameOrUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameOrUrlField, value) != true)) {
                    this.FilenameOrUrlField = value;
                    this.RaisePropertyChanged("FilenameOrUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.inflectra.com/KronoDesk/Services/v1.0/", ConfigurationName="KronoClient.IImportExport")]
    public interface IImportExport {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/Connection_Authenticate" +
            "", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/Connection_Authenticate" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/Connection_Authenticate" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        bool Connection_Authenticate(string userName, string password, string pluginName, bool useLicense);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/Connection_Disconnect", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/Connection_DisconnectRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/Connection_DisconnectSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        void Connection_Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/System_GetServerDateTim" +
            "e", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/System_GetServerDateTim" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/System_GetServerDateTim" +
            "eServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        System.DateTime System_GetServerDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/System_GetWebServerUrl", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/System_GetWebServerUrlR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IService/System_GetWebServerUrlS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        string System_GetWebServerUrl();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Product_Retrieve", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Product_RetrieveRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Product_RetrieveSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteProduct> Product_Retrieve(bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_Create", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_CreateRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_CreateService" +
            "FaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_Create(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser remoteUser, string password, string passwordQuestion, string passwordAnswer, System.Collections.Generic.List<string> roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_RetrieveById", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_RetrieveByIdR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_RetrieveByIdS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveById(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_RetrieveByLog" +
            "in", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_RetrieveByLog" +
            "inResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_RetrieveByLog" +
            "inServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveByLogin(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_RetrieveByEma" +
            "ilAddress", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_RetrieveByEma" +
            "ilAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/User_RetrieveByEma" +
            "ilAddressServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser> User_RetrieveByEmailAddress(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_Create", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_CreateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_CreateServi" +
            "ceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_Create(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket remoteTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_AddNote", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_AddNoteResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_AddNoteServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_AddNote(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote remoteTicketNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_UpdateNote", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_UpdateNoteR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_UpdateNoteS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_UpdateNote(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote remoteTicketNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_Update", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_UpdateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Ticket_UpdateServi" +
            "ceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_Update(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket remoteTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/System_RetrieveSit" +
            "emapEntries", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/System_RetrieveSit" +
            "emapEntriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/System_RetrieveSit" +
            "emapEntriesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteSitemapEntry> System_RetrieveSitemapEntries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/System_GetExtensio" +
            "nFromMimeType", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/System_GetExtensio" +
            "nFromMimeTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/System_GetExtensio" +
            "nFromMimeTypeServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        string System_GetExtensionFromMimeType(string mimeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/System_GetMimeType" +
            "FromExtension", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/System_GetMimeType" +
            "FromExtensionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/System_GetMimeType" +
            "FromExtensionServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        string System_GetMimeTypeFromExtension(string extension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Document_AddFile", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Document_AddFileRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Document_AddFileSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument Document_AddFile(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument remoteDocument, byte[] binaryData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Document_GetForArt" +
            "ifact", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Document_GetForArt" +
            "ifactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v1.0/IImportExport/Document_GetForArt" +
            "ifactServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v1_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument> Document_GetForArtifact(int artType, long artifactId, bool includeHash);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImportExportChannel : Inflectra.KronoDesk.Service.Email.Settings.KronoClient.IImportExport, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportExportClient : System.ServiceModel.ClientBase<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.IImportExport>, Inflectra.KronoDesk.Service.Email.Settings.KronoClient.IImportExport {
        
        public ImportExportClient() {
        }
        
        public ImportExportClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImportExportClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImportExportClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImportExportClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Connection_Authenticate(string userName, string password, string pluginName, bool useLicense) {
            return base.Channel.Connection_Authenticate(userName, password, pluginName, useLicense);
        }
        
        public void Connection_Disconnect() {
            base.Channel.Connection_Disconnect();
        }
        
        public System.DateTime System_GetServerDateTime() {
            return base.Channel.System_GetServerDateTime();
        }
        
        public string System_GetWebServerUrl() {
            return base.Channel.System_GetWebServerUrl();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteProduct> Product_Retrieve(bool includeDeleted) {
            return base.Channel.Product_Retrieve(includeDeleted);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_Create(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser remoteUser, string password, string passwordQuestion, string passwordAnswer, System.Collections.Generic.List<string> roles) {
            return base.Channel.User_Create(remoteUser, password, passwordQuestion, passwordAnswer, roles);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveById(long userId) {
            return base.Channel.User_RetrieveById(userId);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveByLogin(string login) {
            return base.Channel.User_RetrieveByLogin(login);
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser> User_RetrieveByEmailAddress(string emailAddress) {
            return base.Channel.User_RetrieveByEmailAddress(emailAddress);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_Create(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket remoteTicket) {
            return base.Channel.Ticket_Create(remoteTicket);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_AddNote(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote remoteTicketNote) {
            return base.Channel.Ticket_AddNote(remoteTicketNote);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_UpdateNote(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote remoteTicketNote) {
            return base.Channel.Ticket_UpdateNote(remoteTicketNote);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_Update(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket remoteTicket) {
            return base.Channel.Ticket_Update(remoteTicket);
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteSitemapEntry> System_RetrieveSitemapEntries() {
            return base.Channel.System_RetrieveSitemapEntries();
        }
        
        public string System_GetExtensionFromMimeType(string mimeType) {
            return base.Channel.System_GetExtensionFromMimeType(mimeType);
        }
        
        public string System_GetMimeTypeFromExtension(string extension) {
            return base.Channel.System_GetMimeTypeFromExtension(extension);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument Document_AddFile(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument remoteDocument, byte[] binaryData) {
            return base.Channel.Document_AddFile(remoteDocument, binaryData);
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument> Document_GetForArtifact(int artType, long artifactId, bool includeHash) {
            return base.Channel.Document_GetForArtifact(artType, artifactId, includeHash);
        }
    }
}
