//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inflectra.KronoDesk.Service.Email.Settings.KronoClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
    [System.SerializableAttribute()]
    public partial struct ServiceFaultMessage : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteProduct", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WorkflowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductToken {
            get {
                return this.ProductTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductTokenField, value) != true)) {
                    this.ProductTokenField = value;
                    this.RaisePropertyChanged("ProductToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((this.WorkflowIdField.Equals(value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteUser", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LdapDnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RssTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LdapDn {
            get {
                return this.LdapDnField;
            }
            set {
                if ((object.ReferenceEquals(this.LdapDnField, value) != true)) {
                    this.LdapDnField = value;
                    this.RaisePropertyChanged("LdapDn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleInitial {
            get {
                return this.MiddleInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleInitialField, value) != true)) {
                    this.MiddleInitialField = value;
                    this.RaisePropertyChanged("MiddleInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RssToken {
            get {
                return this.RssTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.RssTokenField, value) != true)) {
                    this.RssTokenField = value;
                    this.RaisePropertyChanged("RssToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTicket", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTicket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccessedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AssigneeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssigneeUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> CCListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ConcurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote> NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> OpenerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenerUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriorityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResolutionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> SourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccessedDate {
            get {
                return this.AccessedDateField;
            }
            set {
                if ((this.AccessedDateField.Equals(value) != true)) {
                    this.AccessedDateField = value;
                    this.RaisePropertyChanged("AccessedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AssigneeId {
            get {
                return this.AssigneeIdField;
            }
            set {
                if ((this.AssigneeIdField.Equals(value) != true)) {
                    this.AssigneeIdField = value;
                    this.RaisePropertyChanged("AssigneeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssigneeUserName {
            get {
                return this.AssigneeUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneeUserNameField, value) != true)) {
                    this.AssigneeUserNameField = value;
                    this.RaisePropertyChanged("AssigneeUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> CCList {
            get {
                return this.CCListField;
            }
            set {
                if ((object.ReferenceEquals(this.CCListField, value) != true)) {
                    this.CCListField = value;
                    this.RaisePropertyChanged("CCList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ConcurrencyId {
            get {
                return this.ConcurrencyIdField;
            }
            set {
                if ((this.ConcurrencyIdField.Equals(value) != true)) {
                    this.ConcurrencyIdField = value;
                    this.RaisePropertyChanged("ConcurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAttachments {
            get {
                return this.HasAttachmentsField;
            }
            set {
                if ((this.HasAttachmentsField.Equals(value) != true)) {
                    this.HasAttachmentsField = value;
                    this.RaisePropertyChanged("HasAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongDescription {
            get {
                return this.LongDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LongDescriptionField, value) != true)) {
                    this.LongDescriptionField = value;
                    this.RaisePropertyChanged("LongDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote> Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> OpenerId {
            get {
                return this.OpenerIdField;
            }
            set {
                if ((this.OpenerIdField.Equals(value) != true)) {
                    this.OpenerIdField = value;
                    this.RaisePropertyChanged("OpenerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenerUserName {
            get {
                return this.OpenerUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenerUserNameField, value) != true)) {
                    this.OpenerUserNameField = value;
                    this.RaisePropertyChanged("OpenerUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PriorityId {
            get {
                return this.PriorityIdField;
            }
            set {
                if ((this.PriorityIdField.Equals(value) != true)) {
                    this.PriorityIdField = value;
                    this.RaisePropertyChanged("PriorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriorityName {
            get {
                return this.PriorityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityNameField, value) != true)) {
                    this.PriorityNameField = value;
                    this.RaisePropertyChanged("PriorityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ResolutionId {
            get {
                return this.ResolutionIdField;
            }
            set {
                if ((this.ResolutionIdField.Equals(value) != true)) {
                    this.ResolutionIdField = value;
                    this.RaisePropertyChanged("ResolutionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionName {
            get {
                return this.ResolutionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNameField, value) != true)) {
                    this.ResolutionNameField = value;
                    this.RaisePropertyChanged("ResolutionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((this.SourceIdField.Equals(value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTicketNote", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTicketNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInternalOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ModifiedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> NoteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TicketIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInternalOnly {
            get {
                return this.IsInternalOnlyField;
            }
            set {
                if ((this.IsInternalOnlyField.Equals(value) != true)) {
                    this.IsInternalOnlyField = value;
                    this.RaisePropertyChanged("IsInternalOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ModifiedById {
            get {
                return this.ModifiedByIdField;
            }
            set {
                if ((this.ModifiedByIdField.Equals(value) != true)) {
                    this.ModifiedByIdField = value;
                    this.RaisePropertyChanged("ModifiedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> NoteId {
            get {
                return this.NoteIdField;
            }
            set {
                if ((this.NoteIdField.Equals(value) != true)) {
                    this.NoteIdField = value;
                    this.RaisePropertyChanged("NoteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteSort", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteSort : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SortAscendingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SortAscending {
            get {
                return this.SortAscendingField;
            }
            set {
                if ((this.SortAscendingField.Equals(value) != true)) {
                    this.SortAscendingField = value;
                    this.RaisePropertyChanged("SortAscending");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteFilter", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.KronoDesk.Service.Email.Settings.KronoClient.DateRange DateRangeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IntValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Inflectra.KronoDesk.Service.Email.Settings.KronoClient.MultiValueFilter MultiValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.DateRange DateRangeValue {
            get {
                return this.DateRangeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.DateRangeValueField, value) != true)) {
                    this.DateRangeValueField = value;
                    this.RaisePropertyChanged("DateRangeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IntValue {
            get {
                return this.IntValueField;
            }
            set {
                if ((this.IntValueField.Equals(value) != true)) {
                    this.IntValueField = value;
                    this.RaisePropertyChanged("IntValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.MultiValueFilter MultiValue {
            get {
                return this.MultiValueField;
            }
            set {
                if ((object.ReferenceEquals(this.MultiValueField, value) != true)) {
                    this.MultiValueField = value;
                    this.RaisePropertyChanged("MultiValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateRange", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class DateRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsiderTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsiderTimes {
            get {
                return this.ConsiderTimesField;
            }
            set {
                if ((this.ConsiderTimesField.Equals(value) != true)) {
                    this.ConsiderTimesField = value;
                    this.RaisePropertyChanged("ConsiderTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiValueFilter", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class MultiValueFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> ValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNone {
            get {
                return this.IsNoneField;
            }
            set {
                if ((this.IsNoneField.Equals(value) != true)) {
                    this.IsNoneField = value;
                    this.RaisePropertyChanged("IsNone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> Values {
            get {
                return this.ValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ValuesField, value) != true)) {
                    this.ValuesField = value;
                    this.RaisePropertyChanged("Values");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTicketType", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTicketType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TicketTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TicketTypeId {
            get {
                return this.TicketTypeIdField;
            }
            set {
                if ((this.TicketTypeIdField.Equals(value) != true)) {
                    this.TicketTypeIdField = value;
                    this.RaisePropertyChanged("TicketTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTicketStatus", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTicketStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TicketStatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TicketStatusId {
            get {
                return this.TicketStatusIdField;
            }
            set {
                if ((this.TicketStatusIdField.Equals(value) != true)) {
                    this.TicketStatusIdField = value;
                    this.RaisePropertyChanged("TicketStatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTicketResolution", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTicketResolution : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TicketResolutionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TicketResolutionId {
            get {
                return this.TicketResolutionIdField;
            }
            set {
                if ((this.TicketResolutionIdField.Equals(value) != true)) {
                    this.TicketResolutionIdField = value;
                    this.RaisePropertyChanged("TicketResolutionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteTicketPriority", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteTicketPriority : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> TicketPriorityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TicketPriorityId {
            get {
                return this.TicketPriorityIdField;
            }
            set {
                if ((this.TicketPriorityIdField.Equals(value) != true)) {
                    this.TicketPriorityIdField = value;
                    this.RaisePropertyChanged("TicketPriorityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteArticle", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteArticle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ArticleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ConcurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreatorUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DisplayIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInternalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ViewsCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ArticleId {
            get {
                return this.ArticleIdField;
            }
            set {
                if ((this.ArticleIdField.Equals(value) != true)) {
                    this.ArticleIdField = value;
                    this.RaisePropertyChanged("ArticleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ConcurrencyId {
            get {
                return this.ConcurrencyIdField;
            }
            set {
                if ((this.ConcurrencyIdField.Equals(value) != true)) {
                    this.ConcurrencyIdField = value;
                    this.RaisePropertyChanged("ConcurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CreatorUserId {
            get {
                return this.CreatorUserIdField;
            }
            set {
                if ((this.CreatorUserIdField.Equals(value) != true)) {
                    this.CreatorUserIdField = value;
                    this.RaisePropertyChanged("CreatorUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorUserName {
            get {
                return this.CreatorUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorUserNameField, value) != true)) {
                    this.CreatorUserNameField = value;
                    this.RaisePropertyChanged("CreatorUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DisplayId {
            get {
                return this.DisplayIdField;
            }
            set {
                if ((this.DisplayIdField.Equals(value) != true)) {
                    this.DisplayIdField = value;
                    this.RaisePropertyChanged("DisplayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInternal {
            get {
                return this.IsInternalField;
            }
            set {
                if ((this.IsInternalField.Equals(value) != true)) {
                    this.IsInternalField = value;
                    this.RaisePropertyChanged("IsInternal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ViewsCount {
            get {
                return this.ViewsCountField;
            }
            set {
                if ((this.ViewsCountField.Equals(value) != true)) {
                    this.ViewsCountField = value;
                    this.RaisePropertyChanged("ViewsCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteSitemapEntry", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteSitemapEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDynamicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDynamic {
            get {
                return this.IsDynamicField;
            }
            set {
                if ((this.IsDynamicField.Equals(value) != true)) {
                    this.IsDynamicField = value;
                    this.RaisePropertyChanged("IsDynamic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteVersion", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Patch {
            get {
                return this.PatchField;
            }
            set {
                if ((this.PatchField.Equals(value) != true)) {
                    this.PatchField = value;
                    this.RaisePropertyChanged("Patch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteSetting", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteDocument", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0.Dat" +
        "aObjects")]
    [System.SerializableAttribute()]
    public partial class RemoteDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ArtifactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArtifactTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AttachmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameOrUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UploadDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ArtifactId {
            get {
                return this.ArtifactIdField;
            }
            set {
                if ((this.ArtifactIdField.Equals(value) != true)) {
                    this.ArtifactIdField = value;
                    this.RaisePropertyChanged("ArtifactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArtifactTypeId {
            get {
                return this.ArtifactTypeIdField;
            }
            set {
                if ((this.ArtifactTypeIdField.Equals(value) != true)) {
                    this.ArtifactTypeIdField = value;
                    this.RaisePropertyChanged("ArtifactTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AttachmentId {
            get {
                return this.AttachmentIdField;
            }
            set {
                if ((this.AttachmentIdField.Equals(value) != true)) {
                    this.AttachmentIdField = value;
                    this.RaisePropertyChanged("AttachmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentTypeId {
            get {
                return this.AttachmentTypeIdField;
            }
            set {
                if ((this.AttachmentTypeIdField.Equals(value) != true)) {
                    this.AttachmentTypeIdField = value;
                    this.RaisePropertyChanged("AttachmentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorName {
            get {
                return this.AuthorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorNameField, value) != true)) {
                    this.AuthorNameField = value;
                    this.RaisePropertyChanged("AuthorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentURL {
            get {
                return this.DocumentURLField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentURLField, value) != true)) {
                    this.DocumentURLField = value;
                    this.RaisePropertyChanged("DocumentURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilenameOrUrl {
            get {
                return this.FilenameOrUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameOrUrlField, value) != true)) {
                    this.FilenameOrUrlField = value;
                    this.RaisePropertyChanged("FilenameOrUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UploadDate {
            get {
                return this.UploadDateField;
            }
            set {
                if ((this.UploadDateField.Equals(value) != true)) {
                    this.UploadDateField = value;
                    this.RaisePropertyChanged("UploadDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.inflectra.com/KronoDesk/Services/v3.0/", ConfigurationName="KronoClient.ISoapService")]
    public interface ISoapService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Connection_Authenti" +
            "cate", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Connection_Authenti" +
            "cateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Connection_Authenti" +
            "cateServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        bool Connection_Authenticate(string userName, string password, string pluginName, bool useLicense);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Connection_Disconne" +
            "ct", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Connection_Disconne" +
            "ctResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Connection_Disconne" +
            "ctServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        void Connection_Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetServerDat" +
            "eTime", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetServerDat" +
            "eTimeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetServerDat" +
            "eTimeServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.DateTime System_GetServerDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetWebServer" +
            "Url", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetWebServer" +
            "UrlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetWebServer" +
            "UrlServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        string System_GetWebServerUrl();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetEmailSepa" +
            "rator", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetEmailSepa" +
            "ratorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetEmailSepa" +
            "ratorServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<string> System_GetEmailSeparator();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetBlockedEm" +
            "ails", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetBlockedEm" +
            "ailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetBlockedEm" +
            "ailsServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<string> System_GetBlockedEmails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Product_Retrieve", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Product_RetrieveRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Product_RetrieveSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteProduct> Product_Retrieve(bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_Create", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_CreateResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_CreateServiceF" +
            "aultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_Create(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser remoteUser, string password, string passwordQuestion, string passwordAnswer, System.Collections.Generic.List<string> roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveById", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveByIdRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveByIdSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveById(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveByLogi" +
            "n", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveByLogi" +
            "nResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveByLogi" +
            "nServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveByLogin(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveByEmai" +
            "lAddress", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveByEmai" +
            "lAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveByEmai" +
            "lAddressServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveByEmailAddress(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_Update", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_UpdateResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_UpdateServiceF" +
            "aultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        void User_Update(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser remoteUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_Retrieve", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_RetrieveServic" +
            "eFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser> User_Retrieve(int startRow, int numberRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_Delete", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_DeleteResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/User_DeleteServiceF" +
            "aultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        void User_Delete(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_Create", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_CreateRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_CreateServic" +
            "eFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_Create(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket remoteTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_Update", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_UpdateRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_UpdateServic" +
            "eFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_Update(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket remoteTicket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveById" +
            "", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveById" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveById" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_RetrieveById(long ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_Delete", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_DeleteRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_DeleteServic" +
            "eFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        void Ticket_Delete(long ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_Retrieve", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveServ" +
            "iceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket> Ticket_Retrieve(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteSort remoteSort, System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteFilter> remoteFilters, int startRow, int numberRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_AddNote", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_AddNoteRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_AddNoteServi" +
            "ceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_AddNote(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote remoteTicketNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_UpdateNote", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_UpdateNoteRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_UpdateNoteSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_UpdateNote(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote remoteTicketNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_DeleteNote", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_DeleteNoteRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_DeleteNoteSe" +
            "rviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        void Ticket_DeleteNote(long ticketId, long noteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveNote" +
            "ById", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveNote" +
            "ByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveNote" +
            "ByIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_RetrieveNoteById(long ticketId, long noteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveNote" +
            "sForTicket", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveNote" +
            "sForTicketResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Ticket_RetrieveNote" +
            "sForTicketServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote> Ticket_RetrieveNotesForTicket(long ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketType_Retrieve" +
            "", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketType_Retrieve" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketType_Retrieve" +
            "ServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketType> TicketType_Retrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketStatus_Retrie" +
            "ve", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketStatus_Retrie" +
            "veResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketStatus_Retrie" +
            "veServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketStatus> TicketStatus_Retrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketResolution_Re" +
            "trieve", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketResolution_Re" +
            "trieveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketResolution_Re" +
            "trieveServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketResolution> TicketResolution_Retrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketPriority_Retr" +
            "ieve", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketPriority_Retr" +
            "ieveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/TicketPriority_Retr" +
            "ieveServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketPriority> TicketPriority_Retrieve();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Article_RetrieveRec" +
            "ent", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Article_RetrieveRec" +
            "entResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Article_RetrieveRec" +
            "entServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteArticle> Article_RetrieveRecent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Article_RetrievePop" +
            "ular", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Article_RetrievePop" +
            "ularResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Article_RetrievePop" +
            "ularServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteArticle> Article_RetrievePopular();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Article_RetrieveSub" +
            "scribed", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Article_RetrieveSub" +
            "scribedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Article_RetrieveSub" +
            "scribedServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteArticle> Article_RetrieveSubscribed();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_RetrieveSite" +
            "mapEntries", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_RetrieveSite" +
            "mapEntriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_RetrieveSite" +
            "mapEntriesServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteSitemapEntry> System_RetrieveSitemapEntries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetExtension" +
            "FromMimeType", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetExtension" +
            "FromMimeTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetExtension" +
            "FromMimeTypeServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        string System_GetExtensionFromMimeType(string mimeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetMimeTypeF" +
            "romExtension", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetMimeTypeF" +
            "romExtensionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetMimeTypeF" +
            "romExtensionServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        string System_GetMimeTypeFromExtension(string extension);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetProductVe" +
            "rsion", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetProductVe" +
            "rsionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetProductVe" +
            "rsionServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteVersion System_GetProductVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetSettings", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetSettingsR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/System_GetSettingsS" +
            "erviceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteSetting> System_GetSettings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Document_AddFile", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Document_AddFileRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Document_AddFileSer" +
            "viceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument Document_AddFile(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument remoteDocument, byte[] binaryData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Document_GetForArti" +
            "fact", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Document_GetForArti" +
            "factResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Document_GetForArti" +
            "factServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument> Document_GetForArtifact(int artType, long artifactId, bool includeHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Document_RetrieveBy" +
            "dId", ReplyAction="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Document_RetrieveBy" +
            "dIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ServiceFaultMessage), Action="http://www.inflectra.com/KronoDesk/Services/v3.0/ISoapService/Document_RetrieveBy" +
            "dIdServiceFaultMessageFault", Name="ServiceFaultMessage", Namespace="http://schemas.datacontract.org/2004/07/Inflectra.KronoDesk.Web.Services.v3_0")]
        Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument Document_RetrieveBydId(long attachmentId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISoapServiceChannel : Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ISoapService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoapServiceClient : System.ServiceModel.ClientBase<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ISoapService>, Inflectra.KronoDesk.Service.Email.Settings.KronoClient.ISoapService {
        
        public SoapServiceClient() {
        }
        
        public SoapServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoapServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Connection_Authenticate(string userName, string password, string pluginName, bool useLicense) {
            return base.Channel.Connection_Authenticate(userName, password, pluginName, useLicense);
        }
        
        public void Connection_Disconnect() {
            base.Channel.Connection_Disconnect();
        }
        
        public System.DateTime System_GetServerDateTime() {
            return base.Channel.System_GetServerDateTime();
        }
        
        public string System_GetWebServerUrl() {
            return base.Channel.System_GetWebServerUrl();
        }
        
        public System.Collections.Generic.List<string> System_GetEmailSeparator() {
            return base.Channel.System_GetEmailSeparator();
        }
        
        public System.Collections.Generic.List<string> System_GetBlockedEmails() {
            return base.Channel.System_GetBlockedEmails();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteProduct> Product_Retrieve(bool includeDeleted) {
            return base.Channel.Product_Retrieve(includeDeleted);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_Create(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser remoteUser, string password, string passwordQuestion, string passwordAnswer, System.Collections.Generic.List<string> roles) {
            return base.Channel.User_Create(remoteUser, password, passwordQuestion, passwordAnswer, roles);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveById(long userId) {
            return base.Channel.User_RetrieveById(userId);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveByLogin(string login) {
            return base.Channel.User_RetrieveByLogin(login);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser User_RetrieveByEmailAddress(string emailAddress) {
            return base.Channel.User_RetrieveByEmailAddress(emailAddress);
        }
        
        public void User_Update(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser remoteUser) {
            base.Channel.User_Update(remoteUser);
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteUser> User_Retrieve(int startRow, int numberRows) {
            return base.Channel.User_Retrieve(startRow, numberRows);
        }
        
        public void User_Delete(long userId) {
            base.Channel.User_Delete(userId);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_Create(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket remoteTicket) {
            return base.Channel.Ticket_Create(remoteTicket);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_Update(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket remoteTicket) {
            return base.Channel.Ticket_Update(remoteTicket);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket Ticket_RetrieveById(long ticketId) {
            return base.Channel.Ticket_RetrieveById(ticketId);
        }
        
        public void Ticket_Delete(long ticketId) {
            base.Channel.Ticket_Delete(ticketId);
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicket> Ticket_Retrieve(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteSort remoteSort, System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteFilter> remoteFilters, int startRow, int numberRows) {
            return base.Channel.Ticket_Retrieve(remoteSort, remoteFilters, startRow, numberRows);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_AddNote(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote remoteTicketNote) {
            return base.Channel.Ticket_AddNote(remoteTicketNote);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_UpdateNote(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote remoteTicketNote) {
            return base.Channel.Ticket_UpdateNote(remoteTicketNote);
        }
        
        public void Ticket_DeleteNote(long ticketId, long noteId) {
            base.Channel.Ticket_DeleteNote(ticketId, noteId);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote Ticket_RetrieveNoteById(long ticketId, long noteId) {
            return base.Channel.Ticket_RetrieveNoteById(ticketId, noteId);
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketNote> Ticket_RetrieveNotesForTicket(long ticketId) {
            return base.Channel.Ticket_RetrieveNotesForTicket(ticketId);
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketType> TicketType_Retrieve() {
            return base.Channel.TicketType_Retrieve();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketStatus> TicketStatus_Retrieve() {
            return base.Channel.TicketStatus_Retrieve();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketResolution> TicketResolution_Retrieve() {
            return base.Channel.TicketResolution_Retrieve();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteTicketPriority> TicketPriority_Retrieve() {
            return base.Channel.TicketPriority_Retrieve();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteArticle> Article_RetrieveRecent() {
            return base.Channel.Article_RetrieveRecent();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteArticle> Article_RetrievePopular() {
            return base.Channel.Article_RetrievePopular();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteArticle> Article_RetrieveSubscribed() {
            return base.Channel.Article_RetrieveSubscribed();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteSitemapEntry> System_RetrieveSitemapEntries() {
            return base.Channel.System_RetrieveSitemapEntries();
        }
        
        public string System_GetExtensionFromMimeType(string mimeType) {
            return base.Channel.System_GetExtensionFromMimeType(mimeType);
        }
        
        public string System_GetMimeTypeFromExtension(string extension) {
            return base.Channel.System_GetMimeTypeFromExtension(extension);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteVersion System_GetProductVersion() {
            return base.Channel.System_GetProductVersion();
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteSetting> System_GetSettings() {
            return base.Channel.System_GetSettings();
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument Document_AddFile(Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument remoteDocument, byte[] binaryData) {
            return base.Channel.Document_AddFile(remoteDocument, binaryData);
        }
        
        public System.Collections.Generic.List<Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument> Document_GetForArtifact(int artType, long artifactId, bool includeHash) {
            return base.Channel.Document_GetForArtifact(artType, artifactId, includeHash);
        }
        
        public Inflectra.KronoDesk.Service.Email.Settings.KronoClient.RemoteDocument Document_RetrieveBydId(long attachmentId) {
            return base.Channel.Document_RetrieveBydId(attachmentId);
        }
    }
}
